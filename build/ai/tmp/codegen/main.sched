.physical_buffer
%0(new_input)	 : <u8 [1,3,320,320] 307200 bytes of [1,3,320,320]> @input[0, 307200] life(0, 169)
%1(k510_0)	 : <f32 [1,8,40,40] 51200 bytes of [1,8,40,40]> @output[0, 51200] life(1, 170)
%2(k510_0)	 : <f32 [1,4,40,40] 25600 bytes of [1,4,40,40]> @output[51200, 76800] life(1, 173)
%3(k510_0)	 : <f32 [1,20,40,40] 128000 bytes of [1,20,40,40]> @output[76800, 204800] life(1, 176)
%4(k510_0)	 : <f32 [1,8,20,20] 12800 bytes of [1,8,20,20]> @output[204800, 217600] life(1, 171)
%5(k510_0)	 : <f32 [1,4,20,20] 6400 bytes of [1,4,20,20]> @output[217600, 224000] life(1, 174)
%6(k510_0)	 : <f32 [1,20,20,20] 32000 bytes of [1,20,20,20]> @output[224000, 256000] life(1, 177)
%7(k510_0)	 : <f32 [1,8,10,10] 3200 bytes of [1,8,10,10]> @output[256000, 259200] life(1, 172)
%8(k510_0)	 : <f32 [1,4,10,10] 1600 bytes of [1,4,10,10]> @output[259200, 260800] life(1, 175)
%9(k510_0)	 : <f32 [1,20,10,10] 8000 bytes of [1,20,10,10]> @output[260800, 268800] life(1, 178)

.compute_sequence
fn main(%0) : (<u8 [1,3,320,320] 307200 bytes of [1,3,320,320]>) -> (<f32 [1,8,40,40] 51200 bytes of [1,8,40,40]>, <f32 [1,8,20,20] 12800 bytes of [1,8,20,20]>, <f32 [1,8,10,10] 3200 bytes of [1,8,10,10]>, <f32 [1,4,40,40] 25600 bytes of [1,4,40,40]>, <f32 [1,4,20,20] 6400 bytes of [1,4,20,20]>, <f32 [1,4,10,10] 1600 bytes of [1,4,10,10]>, <f32 [1,20,40,40] 128000 bytes of [1,20,40,40]>, <f32 [1,20,20,20] 32000 bytes of [1,20,20,20]>, <f32 [1,20,10,10] 8000 bytes of [1,20,10,10]>)
{
    %0 = Input() : () -> (<u8 [1,3,320,320] 307200 bytes of [1,3,320,320]>)
    %1,     %2,     %3,     %4,     %5,     %6,     %7,     %8,     %9 = Call(%0) : (<u8 [1,3,320,320] 307200 bytes of [1,3,320,320]>) -> (<f32 [1,8,40,40] 51200 bytes of [1,8,40,40]>, <f32 [1,4,40,40] 25600 bytes of [1,4,40,40]>, <f32 [1,20,40,40] 128000 bytes of [1,20,40,40]>, <f32 [1,8,20,20] 12800 bytes of [1,8,20,20]>, <f32 [1,4,20,20] 6400 bytes of [1,4,20,20]>, <f32 [1,20,20,20] 32000 bytes of [1,20,20,20]>, <f32 [1,8,10,10] 3200 bytes of [1,8,10,10]>, <f32 [1,4,10,10] 1600 bytes of [1,4,10,10]>, <f32 [1,20,10,10] 8000 bytes of [1,20,10,10]>)
    return %1 : (<f32 [1,8,40,40] 51200 bytes of [1,8,40,40]>)
    return %4 : (<f32 [1,8,20,20] 12800 bytes of [1,8,20,20]>)
    return %7 : (<f32 [1,8,10,10] 3200 bytes of [1,8,10,10]>)
    return %2 : (<f32 [1,4,40,40] 25600 bytes of [1,4,40,40]>)
    return %5 : (<f32 [1,4,20,20] 6400 bytes of [1,4,20,20]>)
    return %8 : (<f32 [1,4,10,10] 1600 bytes of [1,4,10,10]>)
    return %3 : (<f32 [1,20,40,40] 128000 bytes of [1,20,40,40]>)
    return %6 : (<f32 [1,20,20,20] 32000 bytes of [1,20,20,20]>)
    return %9 : (<f32 [1,20,10,10] 8000 bytes of [1,20,10,10]>)
}
